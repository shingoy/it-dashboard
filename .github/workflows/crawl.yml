name: Government IT Meeting Crawler

on:
  schedule:
    - cron: '0 9 * * *'   # ÊØéÊó• UTC 09:00 = JST 18:00
    - cron: '0 21 * * *'  # ÊØéÊó• UTC 21:00 = JST 06:00ÔºàËøΩÂä†Ôºâ
  workflow_dispatch:      # ÊâãÂãïÂÆüË°å„ÇÇÂèØËÉΩ

jobs:
  crawl-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # ÂÖ®‰Ωì„ÅÆ„Çø„Ç§„É†„Ç¢„Ç¶„Éà
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Run crawler
        run: python scripts/crawl.py
        continue-on-error: true
      
      - name: Check PDFs status
        run: python scripts/check_pdfs.py
        continue-on-error: true
      
      - name: Run extraction (incremental batch processing)
        timeout-minutes: 50
        env:
          EXTRACT_MAX_WORKERS: 1     # 1‰∏¶ÂàóÔºàÂÆâÂÖ®Ôºâ
          MAX_PAGES_PER_PDF: 30      # 30„Éö„Éº„Ç∏Ë∂Ö„ÅÆPDF„ÅØ„Çπ„Ç≠„ÉÉ„Éó
          BATCH_SIZE: 5              # 5‰ª∂ÔºàÁèæÂÆüÁöÑÔºâ
          PDF_TIMEOUT: 400           # 1PDF„ÅÇ„Åü„Çä6.6ÂàÜ
        run: python scripts/extract.py
        continue-on-error: true
      
      - name: Build index
        timeout-minutes: 10
        run: python scripts/build_index.py
        continue-on-error: true
      
      - name: Check generated files
        id: check_files
        run: |
          if [ -d "public/index-shards" ] && [ "$(ls -A public/index-shards)" ]; then
            echo "files_exist=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Files generated successfully"
            echo "üìä Generated files:"
            ls -lh public/index-shards/ | head -20
            echo "Total files: $(ls -1 public/index-shards/ | wc -l)"
          else
            echo "files_exist=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è No files generated, skipping commit"
          fi
      
      - name: Commit and push changes
        if: steps.check_files.outputs.files_exist == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/ data/ || true
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update search index (batch: 50 docs) [skip ci]"
            git pull --rebase origin main || true
            git push origin main
            echo "‚úÖ Changes pushed successfully"
          fi